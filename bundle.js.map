{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./synthesizer/keyboard_scale.js","webpack:///./synthesizer/oscillators.js","webpack:///./synthesizer/pre_mixer.js","webpack:///./synthesizer/filters.js","webpack:///./synthesizer/reverb.js","webpack:///./synthesizer/effects.js","webpack:///./synthesizer/envelopes.js","webpack:///./synthesizer/master_mixer.js","webpack:///./synthesizer/LFO.js","webpack:///./synthesizer/synth.js","webpack:///./GUI/osc_controls.js","webpack:///./GUI/filter_controls.js","webpack:///./GUI/envelope_controls.js","webpack:///./GUI/effect_controls.js","webpack:///./GUI/mouseover_text.js","webpack:///./GUI/lfo_controls.js","webpack:///./GUI/keyboard.js","webpack:///./App.js","webpack:///./GUI/visualizer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keyboard_scale","C1","Cs1","D1","Ds1","E1","F1","Fs1","G1","Gs1","A1","As1","B1","C2","Cs2","D2","Ds2","E2","F2","Fs2","G2","Gs2","A2","As2","B2","C3","Cs3","D3","Ds3","E3","F3","Fs3","G3","Gs3","A3","As3","B3","C4","Cs4","D4","Ds4","E4","F4","Fs4","G4","Gs4","A4","As4","B4","C5","Cs5","D5","Ds5","E5","F5","Fs5","G5","Gs5","A5","As5","B5","C6","Cs6","D6","Ds6","E6","F6","Fs6","G6","Gs6","A6","As6","B6","C7","Cs7","D7","Ds7","E7","F7","Fs7","G7","Gs7","A7","As7","B7","C8","Cs8","oscillators","[object Object]","options","this","type","state","context","interval","frequency","semitone","Math","pow","node","OscillatorNode","volumeNode","createGain","connect","endpoint","start","semitones","setFrequency","freq","setValueAtTime","currentTime","form","connection","pre_mixer","ctx","compressor","createDynamicsCompressor","level1","level2","level3","ampOut","GainNode","gain","out1","out2","undefined","out1Level","out2Level","filters","filter1","filter2","dryOut","BiquadFilterNode","base1","base","filterBank","wetOut","series","parallel","num","ammt","Q","amt","envAmt","wet","CompositeAudioNode","input","output","disconnect","apply","arguments","mergeParams","params","singleParam","parameter","getOwnPropertyNames","AudioParam","filter","prop","forEach","method","argums","args","Array","slice","param","defineProperties","set","LowPassComb","super","delayTime","resonance","gainValue","dampening","lowPass","delay","DelayNode","reverb","roomSize","wetGain","dryGain","COMB_FILTER_TUNINGS","map","delayPerSecond","dry","merger","createChannelMerger","splitter","createChannelSplitter","combFilters","combLeft","combRight","allPassFilters","comb","effects","premixer","toggles","distortion","WaveShaperNode","curve","makeDistortionCurve","oversample","toggleReverb","toggleDistortion","mix","amount","k","Float32Array","degree","PI","x","abs","envelopes","synth","amp","attack","release","keys","ampStepSize","filterStepSize","endFreq1","startFreq1","clearInterval","setInterval","attackInterval","decayInterval","ampStep","filterStep","endFreq2","startFreq2","master_mixer","volume","connector","vol","synthesizer_LFO","lfo","createOscillator","modAmmt","maxAmmt","amplitude","synthesizer_synth","currFreq","oscilloscopeVals","octave","osc1","osc2","osc3","oscBank","preMixer","analyser","createAnalyser","analyser2","master","destination","stop","LFO_PARAMS","osc","none","toggleEffect","setParam","setOptions","setLevels","setVolume","setEnvelope","f1options","parseInt","setQ","setType","f2options","setAmpEnvelope","setFilterEnvelope","setEnvAmmt","envAmmt","resume","oscillator","note","playFreq","index","setWave","osc_controls","document","getElementById","addEventListener","classList","toggle","window","e","dropdowns","getElementsByClassName","openDropdown","parent","length","parentElement","contains","target","remove","preMix","setOscInterval","dropdown","id","innerHTML","setWaveform","filter_controls","setFilterOptions","setFilterLevels","envelope_controls","envAttack","envRelease","filterButton","ampButton","setupEventListeners","parseFloat","setupEffectsControls","distortionToggle","reverbToggle","distortionAmmt","reverbAmmt","effectsMix","setEffectsOptions","mouseover_text","leftText","rightText","controls","osc1Wave","osc1Interval","osc1Vol","osc2Wave","osc2Interval","osc2Vol","osc3Wave","osc3Interval","osc3Vol","octaveControl","filter1Type","filter1Freq","filter1Q","filter2Type","filter2Freq","filter2Q","filterSeries","filterMix","distortionLevel","reverbLevel","lfoVolume","lfoFreq","lfoFilter","lfoRate","lfoAmmt","envelopeAmp","envelopeFilter","envelopeAttack","envelopeRelease","envelopeAmmt","masterVol","values","control","lfo_controls","ampToggle","filterToggle","freqToggle","setLfo","add","GUI_keyboard","playNote","envelopeControls","lfoControls","keyboard","querySelector","stopPropagation","from","querySelectorAll","C","func","Cs","D","Ds","E","F","Fs","G","Gs","A","As","B","toLowerCase","setMasterVolume","search","currNote","chrome","synthesizer","AudioContext","webkitAudioContext","draw1","canvas","getContext","fftSize","frequencyBinCount","data","Uint8Array","draw","requestAnimationFrame","getByteTimeDomainData","trough","fillStyle","fillRect","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","y","moveTo","lineTo","stroke","visualize","draw2","floaters","backgroundColor","getByteFrequencyData","setAttribute","innerWidth","innerHeight","barHeight","floaterHeight","red","green","blue","barWidth","totalAmp","round","visualize2","gitHub","linkedIn","console","log","click","errorModal","createElement","errorTextBox","errorText","createTextNode","appendChild"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const scaleToSemitones = {\n  C1: -45,\n  Cs1: -44,\n  D1: -43,\n  Ds1: -42,\n  E1: -41,\n  F1: -40,\n  Fs1: -39,\n  G1: -38,\n  Gs1: -37,\n  A1: -36,\n  As1: -35,\n  B1: -34,\n  C2: -33,\n  Cs2: -32,\n  D2: -31,\n  Ds2: -30,\n  E2: -29,\n  F2: -28,\n  Fs2: -27,\n  G2: -26,\n  Gs2: -25,\n  A2: -24,\n  As2: -23,\n  B2: -22,\n  C3: -21,\n  Cs3: -20,\n  D3: -19,\n  Ds3: -18,\n  E3: -17,\n  F3: -16,\n  Fs3: -15,\n  G3: -14,\n  Gs3: -13,\n  A3: -12,\n  As3: -11,\n  B3: -10,\n  C4: -9,\n  Cs4: -8,\n  D4: -7,\n  Ds4: -6,\n  E4: -5,\n  F4: -4,\n  Fs4: -3,\n  G4: -2,\n  Gs4: -1,\n  A4: 0,\n  As4: 1,\n  B4: 2,\n  C5: 3,\n  Cs5: 4,\n  D5: 5,\n  Ds5: 6,\n  E5: 7,\n  F5: 8,\n  Fs5: 9,\n  G5: 10,\n  Gs5: 11,\n  A5: 12,\n  As5: 13,\n  B5: 14,\n  C6: 15,\n  Cs6: 16,\n  D6: 17,\n  Ds6: 18,\n  E6: 19,\n  F6: 20,\n  Fs6: 21,\n  G6: 22,\n  Gs6: 23,\n  A6: 24,\n  As6: 25,\n  B6: 26,\n  C7: 27,\n  Cs7: 28,\n  D7: 29,\n  Ds7: 30,\n  E7: 31,\n  F7: 32,\n  Fs7: 33,\n  G7: 34,\n  Gs7: 35,\n  A7: 36,\n  As7: 37,\n  B7: 38,\n  C8: 39,\n  Cs8: 40\n}\n\nexport default scaleToSemitones;","class Oscillator {\n\n  constructor(options) {\n    this.type = options.type;\n    this.state = \"stop\";\n    this.context = options.context;\n    this.interval = 0;\n    this.frequency = 440;\n    this.semitone = Math.pow(2, 1/12);\n    this.node = new OscillatorNode(this.context, {type: this.type});\n    this.volumeNode = this.context.createGain();\n    this.node.connect(this.volumeNode);\n    this.endpoint = this.volumeNode;\n    this.node.start();\n  }\n\n  setInterval(semitones) {\n    this.interval = semitones;\n    this.setFrequency(this.frequency);\n  }\n\n  setFrequency(freq) {\n    this.frequency = freq;\n    let frequency = freq * Math.pow(this.semitone, this.interval);\n    this.node.frequency.setValueAtTime(frequency, this.context.currentTime);\n  }\n\n  setWave(form) {\n    this.node.type = form;\n  }\n\n  connect(connection) {\n    this.endpoint.connect(connection);\n    this.endpoint = connection; \n  }\n\n}\n\nexport default Oscillator;","class PreMixer {\n\n  constructor(ctx, oscillators) {\n\n    this.compressor = ctx.createDynamicsCompressor();\n    this.level1 = ctx.createGain();\n    this.level2 = ctx.createGain();\n    this.level3 = ctx.createGain();\n\n    this.ampOut = new GainNode(ctx, {gain: 0});\n\n    oscillators[0].connect(this.level1);\n    oscillators[1].connect(this.level2);\n    oscillators[2].connect(this.level3);\n\n    this.level1.connect(this.compressor);\n    this.level2.connect(this.compressor);\n    this.level3.connect(this.compressor);\n\n    this.out1 = ctx.createGain({gain: 0.5});\n    this.out2 = ctx.createGain({gain: 0.5});\n    \n    this.compressor.connect(this.ampOut);\n\n    this.ampOut.connect(this.out1);\n    this.ampOut.connect(this.out2);\n  }\n\n  setLevels(options) {\n\n    if (options.level1 !== undefined) {\n      this.level1.gain.value = options.level1\n    }\n\n    if (options.level2 !== undefined) {\n      this.level2.gain.value = options.level2\n    }\n\n    if (options.level3 !== undefined) {\n      this.level3.gain.value = options.level3\n    }\n  }\n\n  setOutput(out1Level) {\n    if(out1Level > 1) {\n      this.out1.gain.value = 1;\n    } else {\n      this.out1.gain.value = out1Level;\n    }\n    this.out2Level = 1 - this.out1Level;\n  }\n\n  connect(filters) {\n    this.out1.connect(filters.filter1);\n    this.out1.connect(filters.filter2);\n    this.out2.connect(filters.dryOut);\n  }\n\n}\n\nexport default PreMixer;","class FilterBank {\n\n  constructor(ctx) {\n    this.context = ctx;\n    \n    this.filter1 = new BiquadFilterNode(ctx, {frequency: 400});\n    this.filter2 = new BiquadFilterNode(ctx, {frequency: 400});\n    this.base1 = 400;\n    this.base = 400;\n\n    this.filterBank = [this.filter1, this.filter2]\n\n    this.wetOut = new GainNode(ctx, {gain: 0.5});\n    this.dryOut = new GainNode(ctx, {gain:0});\n    this.series = new GainNode(ctx, {gain: 0});\n    this.parallel = new GainNode(ctx, {gain: 0.5})\n\n    this.filter1.connect(this.parallel);\n    this.parallel.connect(this.wetOut)\n    this.filter2.connect(this.wetOut);\n\n    this.filter1.connect(this.series);\n    this.series.connect(this.filter2);\n  }\n\n  setFrequency(num, freq) {\n    this.filterBank[num].frequency.value = freq;\n  }\n\n  setQ(num, ammt) {\n    this.filterBank[num].Q.value = ammt;\n  }\n\n  setType(num, type){\n    this.filterBank[num].type = type;\n  }\n\n  setEnvelope(amt){\n    if (amt > 1) {\n      this.envAmt = 1;\n    } else if (amt < 0) {\n      this.envAmt = 0;\n    } else {\n      this.envAmt = amt;\n    }\n  }\n\n  setLevels(options){\n    if (options.series !== undefined) {\n      if (options.series > .5) {\n        this.series.gain.value = .5;\n      } else {\n        this.series.gain.value = options.series;\n      }\n      this.parallel.gain.value = 0.5 - this.series.gain.value;\n    }\n    if (options.wet !== undefined) {\n      if(options.wet > .5) {\n        this.wetOut.gain.value = .5;\n      } else {\n        this.wetOut.gain.value = options.wet;\n      }\n      this.dryOut.gain.value = 0.5 - this.wetOut.gain.value\n    }\n  }\n\n  connect(connection) {\n    this.wetOut.connect(connection);\n    this.dryOut.connect(connection);\n  }\n\n}\n\nexport default FilterBank;","// Implementation of Manfred Schoeder's Freeverb algorithmic reverb\n// inspired by this article https://itnext.io/algorithmic-reverb-and-web-audio-api-e1ccec94621a\n// Uses lowpass \"comb\" filters to simulate delay lines and allpass filters\n// to simulate diffusion through the air\n\n// First, define a composite node class to allow for multiple nodes to \n// be bundled together as one\nclass CompositeAudioNode {\n  constructor(ctx, options) {\n    this.context = ctx;\n    this.input = ctx.createGain();\n    this.output = this.context.createGain();\n  }\n\n  connect(connection) {\n    this.output.connect(connection);\n  }\n\n  disconnect() {\n    this.output.disconnect.apply(this.output, arguments);\n  }\n}\n\n// Utility function for controlling multiple audio params as if they were one\n// credit to https://gist.github.com/miselaytes-anton/7d795d6efcc7774b136c2b73dc38ed32\n\nexport function mergeParams(params){\n  const singleParam = params[0]\n  const parameter = {};\n  const audioNodeMethods = Object.getOwnPropertyNames(AudioParam.prototype)\n  .filter(prop => typeof singleParam[prop] === 'function')\n  \n  audioNodeMethods.forEach(method => {\n      parameter[method] = (...argums) => {\n          const args = Array.prototype.slice.call(argums);\n          params.forEach((param) => {\n              singleParam[method].apply(param, args);\n          })\n          \n      }\n  })\n\n  Object.defineProperties(parameter, {\n      value: {\n        get: function () {\n          return singleParam.value\n        },\n        set: function (value) {\n          params.forEach(param => {\n              param.value = value\n          })\n        }\n      }\n    })\n\n  return parameter;\n}\n\nclass LowPassComb extends CompositeAudioNode {\n  constructor(ctx, options) {\n    super(ctx, options);\n    const {delayTime, resonance: gainValue, dampening: frequency} = options;\n    this.lowPass = new BiquadFilterNode(ctx, {type: 'lowpass', frequency, Q: -3.0102999566398125});\n    this.delay = new DelayNode(ctx, { delayTime });\n    this.gain = ctx.createGain();\n    this.gain.gain.value = gainValue;\n\n    this.input.connect(this.delay)\n      .connect(this.lowPass)\n      .connect(this.gain)\n      .connect(this.input)\n      .connect(this.output);\n  }\n\n  get resonance() {\n    return this.gain.gain\n  }\n\n  get dampening() {\n    return this.delay.delayTime\n  }\n\n  get delayTime() {\n    return this.delay.delayTime;\n  }\n}\n\nclass Reverb extends CompositeAudioNode {\n  constructor(ctx, options) {\n    super(ctx, options);\n    const {roomSize: resonance, dampening, wetGain, dryGain } = options;\n    const SAMPLE_RATE = 44100;\n    const COMB_FILTER_TUNINGS = [1557, 1617, 1491, 1422, 1277, 1356, 1188, 1116]\n      .map(delayPerSecond => delayPerSecond / SAMPLE_RATE);\n    const ALLPASS_FREQUENCIES = [225, 556, 441, 341];\n\n    this.wet = ctx.createGain()\n    this.wet.gain.setValueAtTime(wetGain, ctx.currentTime)\n    this.dry = ctx.createGain()\n    this.dry.gain.setValueAtTime(dryGain, ctx.currentTime)\n    this.merger = ctx.createChannelMerger(2)\n    this.splitter = ctx.createChannelSplitter(2)\n\n    this.combFilters = COMB_FILTER_TUNINGS\n      .map(delayTime => new LowPassComb(ctx, {dampening, resonance, delayTime}));\n    const combLeft = this.combFilters.slice(0, 4);\n    const combRight = this.combFilters.slice(4);\n    this.allPassFilters = ALLPASS_FREQUENCIES\n      .map(frequency => new BiquadFilterNode(ctx, {type: 'allpass', frequency}));\n    this.input.connect(this.wet).connect(this.splitter);\n    this.input.connect(this.dry).connect(this.output);\n\n    combLeft.forEach( comb => {\n      this.splitter.connect(comb.input, 0).connect(this.merger, 0, 0)\n    });\n    combRight.forEach( comb => {\n      this.splitter.connect(comb.input, 1).connect(this.merger, 0, 1)\n    });\n\n    this.merger.connect(this.allPassFilters[0])\n      .connect(this.allPassFilters[1])\n      .connect(this.allPassFilters[2])\n      .connect(this.allPassFilters[3])\n      .connect(this.output);\n\n    this.output.gain.value = .3;\n  }\n\n  get wetGain() {\n    return this.wet.gain;\n  }\n  get dryGain() {\n    return this.dry.gain;\n  }\n  get roomSize() {\n    return mergeParams(this.combFilters.map(comb => comb.resonance));\n  }\n  get dampening() {\n    return mergeParams(this.combFilters.map(comb => comb.dampening));\n  }\n}\n\nexport default Reverb","import Reverb from \"./reverb\";\nclass Effects {\n\n  constructor(ctx, filterBank) {\n    this.context = ctx;\n    this.input = new GainNode(ctx);\n    filterBank.connect(this.input);\n\n    this.premixer = { dry: new GainNode(ctx, {gain: 0}), wet: new GainNode(ctx, {gain: 1})};\n\n    this.input.connect(this.premixer.dry);\n    this.input.connect(this.premixer.wet);\n\n    this.toggles = {reverb: true, distortion: true};\n    this.output = new GainNode(ctx);\n\n    this.distortion = new WaveShaperNode(ctx, {curve: this.makeDistortionCurve(50), oversample: \"4x\"});\n    this.reverb = new Reverb(ctx, {roomSize: .9, dampening: 3000, wetGain: .8, dryGain: .2});\n\n    this.premixer.wet.connect(this.distortion);\n    this.distortion.connect(this.reverb.input);\n    this.reverb.connect(this.output);\n    this.premixer.dry.connect(this.output);\n\n    this.toggleReverb = this.toggleReverb.bind(this);\n    this.toggleDistortion = this.toggleDistortion.bind(this);\n  }\n\n  toggleReverb() {\n    if (this.toggles.reverb) {\n      this.reverb.disconnect();\n      if (this.toggles.distortion) {\n        this.distortion.disconnect();\n        this.distortion.connect(this.output);\n      } else {\n        this.premixer.wet.disconnect();\n        this.premixer.wet.connect(this.output);\n      }\n      this.toggles.reverb = false;\n    } else {\n      if (this.toggles.distortion) {\n        this.distortion.disconnect();\n        this.distortion.connect(this.reverb.input);\n        this.reverb.connect(this.output);\n      } else {\n        this.premixer.wet.disconnect();\n        this.premixer.wet.connect(this.reverb.input);\n        this.reverb.connect(this.output);\n      }\n      this.toggles.reverb = true;\n    }\n  }\n\n  toggleDistortion() {\n    if (this.toggles.distortion) {\n      this.distortion.disconnect();\n      if (this.toggles.reverb) {\n        this.premixer.wet.disconnect();\n        this.premixer.wet.connect(this.reverb.input);\n      } else {\n        this.premixer.wet.disconnect();\n        this.premixer.wet.connect(this.output);\n      }\n      this.toggles.distortion = false;\n    } else {\n      if (this.toggles.reverb) {\n        this.premixer.wet.disconnect();\n        this.premixer.wet.connect(this.distortion);\n        this.distortion.connect(this.reverb.input);\n      } else {\n        this.premixer.wet.disconnect();\n        this.premixer.wet.connect(this.distortion);\n        this.distortion.connect(this.output);\n      }\n      this.toggles.distortion = true;\n    }\n  }\n\n  setOptions(options) {\n    if (options.distortion !== undefined) {\n      this.distortion.curve = this.makeDistortionCurve(100 * options.distortion)\n    }\n    if (options.reverb !== undefined) {\n      let reverbAmmt = this.reverb.roomSize;\n      reverbAmmt.value = options.reverb / 1.01;\n    }\n    if (options.mix !== undefined) {\n      this.premixer.wet.gain.value = options.mix;\n      this.premixer.dry.gain.value = 1 - options.mix;\n    }\n  }\n\n  makeDistortionCurve(amount) {\n    const k = amount\n    const numSamples = 4410;\n    let curve = new Float32Array(numSamples);\n    const degree = Math.PI / 180;\n    let x;\n    for(let i = 0; i < numSamples; i++) {\n      x = i * 2 / numSamples - 1;\n      curve[i] = ( 3 + k ) * x * 20 * degree / (Math.PI + k * Math.abs(x) );\n    }\n    return curve;\n  }\n\n  connect(connection) {\n    this.output.connect(connection);\n  }\n\n}\n\nexport default Effects","class Envelopes {\n  constructor(ctx, synth, premixer, filters) {\n    this.context = ctx;\n    this.synth = synth;\n\n    this.filters = [filters.filter1.frequency, filters.filter2.frequency];\n    this.ampOut = premixer.ampOut.gain;\n\n    this.amp = {attack: .1, release: .1}\n    this.filter = {attack: .1, release: .1}\n\n    this.attack = this.attack.bind(this);\n    this.release = this.release.bind(this);\n\n    this.interval = null;\n  }\n\n  setAmpEnvelope(options) {\n    Object.keys(options).forEach( (param) => {\n      this.amp[param] = options[param];\n    });\n  }\n\n  setFilterEnvelope(options) {\n    Object.keys(options).forEach( (param) => {\n      this.filter[param] = options[param];\n    });\n  }\n\n  attack() {\n    let ampStepSize;\n    if(this.amp.attack <= 0) {\n      ampStepSize = 1;\n    } else { \n      ampStepSize = 1 / (this.amp.attack * 1000 / 10)\n    }\n\n    let filterStepSize;\n    if(this.filter.attack <= 0) {\n      filterStepSize = this.synth.endFreq1 - this.synth.startFreq1;\n    } else {\n      filterStepSize = (this.synth.endFreq1 - this.synth.startFreq1) / (this.filter.attack * 1000 / 10)\n    }\n\n    if(this.interval !== null) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n\n    this.interval = setInterval(function() {\n      this.attackInterval(ampStepSize, filterStepSize);\n    }.bind(this), 10);\n  }\n\n  release() {\n    let ampStepSize;\n    if(this.amp.release <= 0) {\n      ampStepSize = 0 - (this.ampOut.value);\n    } else { \n      ampStepSize = 0 - (this.ampOut.value / (this.amp.release * 1000 / 10))\n    }\n\n    let filterStepSize;\n    if(this.filter.attack <= 0) {\n      filterStepSize = this.synth.startFreq1 - this.filters[0].value;\n    } else {\n      filterStepSize = (this.synth.startFreq1 - this.filters[0].value) / (this.filter.attack * 1000 / 10)\n    }\n\n    if(this.interval !== null) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n\n    this.interval = setInterval(function() {\n      this.decayInterval(ampStepSize, filterStepSize)\n    }.bind(this), 10);\n  }\n\n  attackInterval(ampStep, filterStep) {\n    //Increment param values if needed\n    if (this.filters[0].value < this.synth.endFreq1) {\n      this.filters[0].value += filterStep;\n    }\n    if (this.filters[1].value < this.synth.endFreq2) {\n      this.filters[1].value += filterStep;\n    }\n    if (this.ampOut.value < 1) {\n      this.ampOut.value += ampStep;\n    }\n    \n    //Clear the interval if the attack is complete\n    if (Math.abs(this.filters[0].value - this.synth.endFreq1) < 5 &&\n        Math.abs(this.filters[1].value - this.synth.endFreq2) < 5 &&\n        Math.abs(this.ampOut.value - 1) < .01) {\n          clearInterval(this.interval);\n          this.interval = null;\n    }\n  }\n\n  decayInterval(ampStep, filterStep) {\n    //Increment param values if needed\n    if (this.filters[0].value > this.synth.startFreq1) {\n      this.filters[0].value += filterStep;\n    }\n    if (this.filters[1].value > this.synth.startFreq2) {\n      this.filters[1].value += filterStep;\n    }\n    if (this.ampOut.value > 0) {\n      this.ampOut.value += ampStep;\n    }\n\n    // debugger;\n    //Clear the interval if the attack is complete\n    if (Math.abs(this.filters[0].value - this.synth.startFreq1) < 5 &&\n        Math.abs(this.filters[1].value - this.synth.startFreq2) < 5 &&\n        this.ampOut.value < .01) {\n          clearInterval(this.interval);\n          this.interval = null;\n    }\n\n  }\n}\n\nexport default Envelopes;","class MasterMixer {\n  constructor(ctx, effects) {\n    this.context = ctx;\n    this.volume = new GainNode(ctx, {gain: .7});\n    effects.connect(this.volume);\n  }\n\n  connect(connector) {\n    this.volume.connect(connector);\n  }\n\n  setVolume(vol) {\n    this.volume.gain.value = vol;\n  }\n\n}\n\nexport default MasterMixer;","class LFO {\n  constructor(ctx, synth) {\n    this.lfo = ctx.createOscillator();\n    this.lfo.frequency.value = 1;\n    this.modAmmt = ctx.createGain();\n    this.params = [];\n    this.maxAmmt = 0;\n\n    this.lfo.start();\n    this.lfo.connect(this.modAmmt);\n  }\n\n  setParam(params, mode) {\n    this.params = params;\n    if (mode === \"amp\") {\n      this.maxAmmt = .7;\n    } else if (mode === \"filter\") {\n      this.maxAmmt = 10000;\n    } else if (mode === \"freq\") {\n      this.maxAmmt = 25;\n    } else {  \n      this.maxAmmt = 0;\n    }\n    this.modAmmt.disconnect();\n    this.modAmmt.gain.value = this.maxAmmt / 2;\n    params.forEach( param => this.modAmmt.connect(param));\n  }\n\n  setOptions(options) {\n    if (options.frequency) {\n      this.lfo.frequency.value = options.frequency;\n    }\n    if (options.amplitude) {\n      this.modAmmt.gain.value = this.maxAmmt * options.amplitude;\n    }\n  }\n}\n\nexport default LFO;","import ScaleMap from './keyboard_scale';\nimport Oscillator from './oscillators';\nimport PreMixer from './pre_mixer';\nimport Filters from './filters';\nimport Effects from './effects';\nimport Envelopes from './envelopes';\nimport MasterMix from './master_mixer';\nimport LFO from './LFO';\n\nclass Synth {\n\n  constructor(ctx) {\n    this.state = \"pause\";\n    this.currFreq = 440;\n    this.oscilloscopeVals = {};\n\n    this.context = ctx;\n    this.semitone = Math.pow(2, 1/12);\n    this.octave = 3;\n\n    let osc1 = new Oscillator({type: \"sine\", context: ctx});\n    let osc2 = new Oscillator({type: \"square\", context: ctx});\n    let osc3 = new Oscillator({type: \"sawtooth\", context: ctx});\n    this.oscBank = [osc1, osc2, osc3]\n    \n    this.preMixer = new PreMixer(ctx, this.oscBank);\n    this.filters = new Filters(ctx);\n\n    // Store start and end filter frequencies for use by the envelopes\n    this.envAmt = 1\n    this.startFreq1 = 400;\n    this.endFreq1 = this.startFreq1 + (1000 * this.envAmt);\n    this.startFreq2 = 400;\n    this.endFreq2 = this.startFreq2 + (1000 * this.envAmt);\n\n    this.envelopes = new Envelopes(ctx, this, this.preMixer, this.filters);\n    this.preMixer.connect(this.filters);\n\n    this.effects = new Effects(ctx, this.filters);\n    this.analyser = ctx.createAnalyser();\n    this.analyser2 = ctx.createAnalyser();\n    this.master = new MasterMix(ctx, this.effects);\n\n    this.master.connect(this.analyser);\n    this.master.connect(this.analyser2);\n    this.analyser.connect(ctx.destination);\n\n    this.stop = this.stop.bind(this);\n\n    this.lfo = new LFO(ctx, this);\n\n    this.LFO_PARAMS = {\n      filter: [this.filters.filter1.frequency, this.filters.filter2.frequency], \n      amp: [this.master.volume.gain], \n      freq: this.oscBank.map( osc => osc.node.frequency),\n      none: []\n    }\n\n    this.toggleEffect = this.toggleEffect.bind(this);\n  }\n\n  setLfo(options) {\n    if (options.mode) {\n      this.lfo.setParam(this.LFO_PARAMS[options.mode], options.mode);\n    }\n    if (options.params) {\n      this.lfo.setOptions(options.params);\n    }\n  }\n\n  preMix(options) {\n    this.preMixer.setLevels(options);\n  }\n\n  setMasterVolume(vol) {\n    this.master.setVolume(vol)\n  }\n\n  setFilterOptions(options) {\n    if(options.envAmt !== undefined) {\n      this.filters.setEnvelope(options.envAmt);\n    }\n\n    if (options.filter1 !== undefined) {\n      let f1options = options.filter1;\n      if(f1options.frequency !== undefined) {\n        this.startFreq1 = parseInt(f1options.frequency);\n        this.endFreq1 = this.startFreq1 + (1000 * this.envAmt);\n        if (this.state === \"play\") {\n          this.filters.setFrequency(1, this.endFreq1);\n        } else {\n          this.filters.setFrequency(1, this.startFreq1);\n        }\n      }\n      if(f1options.Q !== undefined ) {\n        this.filters.setQ(0, f1options.Q)\n      }\n      if (f1options.type !== undefined) {\n        this.filters.setType(0, f1options.type);\n      }\n    }\n\n    if (options.filter2 !== undefined) {\n      let f2options = options.filter2;\n      if(f2options.frequency !== undefined) {\n        this.startFreq2 = parseInt(f2options.frequency);\n        this.endFreq2 = this.startFreq2 + (1000 * this.envAmt);\n        if (this.state === \"play\") {\n          this.filters.setFrequency(1, this.endFreq2);\n        } else {\n          this.filters.setFrequency(1, this.startFreq2)\n        }\n      }\n      if(f2options.Q !== undefined ) {\n        this.filters.setQ(1, f2options.Q)\n      }\n      if (f2options.type !== undefined) {\n        this.filters.setType(1, f2options.type);\n      }\n    }\n\n  }\n\n  setFilterLevels(options) {\n    this.filters.setLevels(options);\n  }\n\n  setEnvelope(options) {\n    if (options.type === \"amp\") {\n      this.envelopes.setAmpEnvelope(options);\n    } else if (options.type === \"filter\") {\n      this.envelopes.setFilterEnvelope(options);\n    } else if (options.type === \"filterAmmt\") {\n      this.setEnvAmmt(options.ammt);\n    }\n  }\n\n  setEnvAmmt(ammt) {\n    this.envAmmt = ammt;\n    this.endFreq1 = this.startFreq1 + (1000 * this.envAmt);\n    this.endFreq2 = this.startFreq2 + (1000 * this.envAmt);\n  }\n\n  playFreq(freq) {\n    this.state = \"play\";\n    this.currFreq = freq;\n    if (this.context.state === \"suspended\") {\n      this.context.resume();\n    }\n    this.oscBank.forEach( function(oscillator) {\n      oscillator.setFrequency(freq);\n    })\n\n    this.envelopes.attack();\n  }\n\n  playNote(note) {\n    const freq = 440 * Math.pow(this.semitone, ScaleMap[note]);\n    this.playFreq(freq);\n  }\n\n  stop() {\n    this.state = \"pause\"\n    this.envelopes.release();\n  }\n\n  toggleEffect(name) {\n    if (name === \"distortion\") {\n      this.effects.toggleDistortion();\n    } else {\n      this.effects.toggleReverb();\n    }\n  }\n\n  setEffectsOptions(options) {\n    this.effects.setOptions(options);\n  }\n\n  setWaveform(options) {\n    this.oscBank[options.index].setWave(options.type);\n  }\n\n  setOscInterval(options) {\n    this.oscBank[options.index].setInterval(options.semitones);\n  }\n}\n\nexport default Synth;","function setupOscControls(synth) {\n  const osc1Dropdown = document.getElementById(\"osc1Dropdown\")\n    osc1Dropdown.addEventListener(\"click\", function() {\n      document.getElementById(\"osc1Wave\").classList.toggle(\"showOsc\");\n    })\n\n    const osc2Dropdown = document.getElementById(\"osc2Dropdown\")\n    osc2Dropdown.addEventListener(\"click\", function() {\n      document.getElementById(\"osc2Wave\").classList.toggle(\"showOsc\");\n    })\n\n    const osc3Dropdown = document.getElementById(\"osc3Dropdown\")\n    osc3Dropdown.addEventListener(\"click\", function() {\n      document.getElementById(\"osc3Wave\").classList.toggle(\"showOsc\");\n    })\n\n    window.addEventListener(\"click\", function(e) {\n      const dropdowns = document.getElementsByClassName(\"dropdownContent\");\n      let openDropdown;\n      let parent;\n      for (let i = 0; i < dropdowns.length; i++) {\n        openDropdown = dropdowns[i];\n        parent = openDropdown.parentElement;\n        if ((openDropdown.classList.contains('showOsc') || openDropdown.classList.contains('showFilter')) && parent !== e.target.parentElement) {\n          openDropdown.classList.remove('showOsc');\n          openDropdown.classList.remove('showFilter')\n        }\n      }\n    })\n\n    const osc1Vol = document.getElementById(\"osc1Vol\");\n    osc1Vol.addEventListener(\"input\", function(e) {\n      synth.preMix({level1: e.target.value});\n    }.bind(this));\n\n    const osc2Vol = document.getElementById(\"osc2Vol\");\n    osc2Vol.addEventListener(\"input\", function(e) {\n      synth.preMix({level2: e.target.value});\n    }.bind(this));\n\n    const osc3Vol = document.getElementById(\"osc3Vol\");\n    osc3Vol.addEventListener(\"input\", function(e) {\n      synth.preMix({level3: e.target.value});\n    }.bind(this));\n\n    const osc1Interval = document.getElementById(\"osc1Interval\");\n    osc1Interval.addEventListener(\"input\", function(e) {\n      synth.setOscInterval({index: 0, semitones: e.target.value})\n    }.bind(this));\n\n    const osc2Interval = document.getElementById(\"osc2Interval\");\n    osc2Interval.addEventListener(\"input\", function(e) {\n      synth.setOscInterval({index: 1, semitones: e.target.value})\n    }.bind(this));\n\n    const osc3Interval = document.getElementById(\"osc3Interval\");\n    osc3Interval.addEventListener(\"input\", function(e) {\n      synth.setOscInterval({index: 2, semitones: e.target.value})\n    }.bind(this));\n\n    const osc1Wave = document.getElementById(\"osc1Wave\");\n    osc1Wave.addEventListener(\"click\", function(e) {\n      const dropdown = document.getElementById(\"osc1Dropdown\");\n      if (e.target.id === \"osc1Sine\") {\n        dropdown.innerHTML = \"sine\";\n        synth.setWaveform({index: 0, type: \"sine\"});\n      } else if (e.target.id === \"osc1Square\") {\n        dropdown.innerHTML = \"square\";\n        synth.setWaveform({index: 0, type: \"square\"});\n      } else if (e.target.id === \"osc1Triangle\") {\n        dropdown.innerHTML = \"triangle\";\n        synth.setWaveform({index: 0, type: \"triangle\"});\n      } else if (e.target.id === \"osc1Saw\") {\n        dropdown.innerHTML = \"sawtooth\";\n        synth.setWaveform({index: 0, type: \"sawtooth\"});\n      }\n    }.bind(this));\n\n    const osc2Wave = document.getElementById(\"osc2Wave\");\n    osc2Wave.addEventListener(\"click\", function(e) {\n      const dropdown = document.getElementById(\"osc2Dropdown\");\n      if (e.target.id === \"osc2Sine\") {\n        dropdown.innerHTML = \"sine\";\n        synth.setWaveform({index: 1, type: \"sine\"});\n      } else if (e.target.id === \"osc2Square\") {\n        dropdown.innerHTML = \"square\";\n        synth.setWaveform({index: 1, type: \"square\"});\n      } else if (e.target.id === \"osc2Triangle\") {\n        dropdown.innerHTML = \"triangle\";\n        synth.setWaveform({index: 1, type: \"triangle\"});\n      } else if (e.target.id === \"osc2Saw\") {\n        dropdown.innerHTML = \"sawtooth\";\n        synth.setWaveform({index: 1, type: \"sawtooth\"});\n      }\n    }.bind(this));\n\n    const osc3Wave = document.getElementById(\"osc3Wave\");\n    osc3Wave.addEventListener(\"click\", function(e) {\n      const dropdown = document.getElementById(\"osc3Dropdown\");\n      if (e.target.id === \"osc3Sine\") {\n        dropdown.innerHTML = \"sine\";\n        synth.setWaveform({index: 2, type: \"sine\"});\n      } else if (e.target.id === \"osc3Square\") {\n        dropdown.innerHTML = \"square\";\n        synth.setWaveform({index: 2, type: \"square\"});\n      } else if (e.target.id === \"osc3Triangle\") {\n        dropdown.innerHTML = \"triangle\";\n        synth.setWaveform({index: 2, type: \"triangle\"});\n      } else if (e.target.id === \"osc3Saw\") {\n        dropdown.innerHTML = \"sawtooth\";\n        synth.setWaveform({index: 2, type: \"sawtooth\"});\n      }\n    }.bind(this));\n}\n\nexport default setupOscControls;","function setupFilterControls(synth) {\n\n  const filter1Dropdown = document.getElementById(\"filter1Dropdown\");\n  filter1Dropdown.addEventListener(\"click\", function() {\n    document.getElementById(\"filter1Type\").classList.toggle(\"showFilter\");\n  });\n\n  const filter1Type = document.getElementById(\"filter1Type\");\n    filter1Type.addEventListener(\"click\", function(e) {\n      const dropdown = document.getElementById(\"filter1Dropdown\");\n      if (e.target.id === \"filter1Lowpass\") {\n        dropdown.innerHTML = \"lowpass\";\n        synth.setFilterOptions({filter1: {type: \"lowpass\"}});\n      } else if (e.target.id === \"filter1Highpass\") {\n        dropdown.innerHTML = \"highpass\";\n        synth.setFilterOptions({filter1: {type: \"highpass\"}});\n      } else if (e.target.id === \"filter1Bandpass\") {\n        dropdown.innerHTML = \"bandpass\";\n        synth.setFilterOptions({filter1: {type: \"bandpass\"}});\n      }\n    }.bind(this));\n\n  const filter1Freq = document.getElementById(\"filter1Freq\");\n  filter1Freq.addEventListener(\"input\", function(e) {\n    synth.setFilterOptions({filter1: {frequency: e.target.value}});\n  }.bind(this));\n\n  const filter1Q = document.getElementById(\"filter1Q\");\n  filter1Q.addEventListener(\"input\", function(e){\n    synth.setFilterOptions({filter1: {Q: e.target.value}});\n  }.bind(this));\n\n  const filter1Level = document.getElementById(\"filter1Level\");\n  filter1Level.addEventListener(\"input\", function(e){\n    synth.setFilterLevels({series: e.target.value});\n  }.bind(this));\n\n\n  const filter2Dropdown = document.getElementById(\"filter2Dropdown\");\n  filter2Dropdown.addEventListener(\"click\", function() {\n    document.getElementById(\"filter2Type\").classList.toggle(\"showFilter\");\n  });\n\n  const filter2Type = document.getElementById(\"filter2Type\");\n    filter2Type.addEventListener(\"click\", function(e) {\n      const dropdown = document.getElementById(\"filter2Dropdown\");\n      if (e.target.id === \"filter2Lowpass\") {\n        dropdown.innerHTML = \"lowpass\";\n        synth.setFilterOptions({filter2: {type: \"lowpass\"}});\n      } else if (e.target.id === \"filter2Highpass\") {\n        dropdown.innerHTML = \"highpass\";\n        synth.setFilterOptions({filter2: {type: \"highpass\"}});\n      } else if (e.target.id === \"filter2Bandpass\") {\n        dropdown.innerHTML = \"bandpass\";\n        synth.setFilterOptions({filter2: {type: \"bandpass\"}});\n      }\n    }.bind(this));\n\n  const filter2Freq = document.getElementById(\"filter2Freq\");\n  filter2Freq.addEventListener(\"input\", function(e) {\n    synth.setFilterOptions({filter2: {frequency: e.target.value}});\n  }.bind(this));\n\n  const filter2Q = document.getElementById(\"filter2Q\");\n  filter2Q.addEventListener(\"input\", function(e){\n    synth.setFilterOptions({filter2: {Q: e.target.value}});\n  }.bind(this));\n\n  const filter2Level = document.getElementById(\"filter2Level\");\n  filter2Level.addEventListener(\"input\", function(e){\n    synth.setFilterLevels({wet: e.target.value / 2});\n  }.bind(this));\n\n\n}\n\nexport default setupFilterControls;","class EnvelopeControls {\n  constructor(synth) {\n    this.synth = synth;\n    this.mode = \"amp\"\n    this.envAttack = document.getElementById(\"envelopeAttack\");\n    this.envRelease = document.getElementById(\"envelopeRelease\");\n    this.filterButton = document.getElementById(\"envelopeFilter\");\n    this.ampButton  = document.getElementById(\"envelopeAmp\");\n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n\n    this.envAttack.addEventListener(\"input\", function(e){\n      this.synth.setEnvelope({type: this.mode, attack: parseFloat(e.target.value)})\n    }.bind(this))\n\n    this.envRelease.addEventListener(\"input\", function(e){\n      this.synth.setEnvelope({type: this.mode, release: parseFloat(e.target.value)})\n    }.bind(this))\n\n    this.filterButton.addEventListener(\"click\", function(e) {\n      if (this.mode !== \"filter\") {\n        this.filterButton.classList.toggle(\"buttonSelected\");\n        this.ampButton.classList.toggle(\"buttonSelected\");\n      }\n      this.mode = \"filter\";\n      this.envAttack.value = this.synth.envelopes.filter.attack;\n      this.envRelease.value = this.synth.envelopes.filter.release;\n    }.bind(this));\n\n    this.ampButton.addEventListener(\"click\", function(e) {\n      if (this.mode !== \"amp\") {\n        this.filterButton.classList.toggle(\"buttonSelected\");\n        this.ampButton.classList.toggle(\"buttonSelected\");\n      }\n      this.mode = \"amp\";\n      this.envAttack.value = this.synth.envelopes.amp.attack;\n      this.envRelease.value = this.synth.envelopes.amp.release;\n\n    }.bind(this));\n  }\n}\n\nexport default EnvelopeControls;","export const setupEffectsControls = function(synth) {\n  const distortionToggle = document.getElementById(\"distortionToggle\");\n  const reverbToggle = document.getElementById(\"reverbToggle\");\n  const distortionAmmt = document.getElementById(\"distortionAmmt\");\n  const reverbAmmt = document.getElementById(\"reverbAmmt\");\n  const effectsMix = document.getElementById(\"effectsMix\");\n\n  distortionToggle.addEventListener(\"click\", function(){\n    distortionToggle.classList.toggle(\"buttonSelected\");\n    synth.toggleEffect(\"distortion\");\n  }.bind(this));\n\n  reverbToggle.addEventListener(\"click\", function(){\n    reverbToggle.classList.toggle(\"buttonSelected\");\n    synth.toggleEffect(\"reverb\")\n  });\n\n  distortionAmmt.addEventListener(\"input\", function(e) {\n    synth.setEffectsOptions({distortion: parseFloat(e.target.value)})\n  });\n\n  reverbAmmt.addEventListener(\"input\", function(e) {\n    synth.setEffectsOptions({reverb: parseFloat(e.target.value)})\n  });\n\n  effectsMix.addEventListener(\"input\", function(e) {\n    synth.setEffectsOptions({mix: parseFloat(e.target.value)})\n  })\n\n}","function setupEventListeners() {\n  const leftText = document.getElementById(\"infoLeft\");\n  const rightText = document.getElementById(\"infoRight\");\n  leftText.innerHTML = \"Welcome to SympleSynth, my homebrewed JavaScript synthesizer for modern browsers! Play notes using your mouse or keyboard, or modify your sound using the controls.\"\n  rightText.innerHTML = \"Mouse over one of the controls to learn more.\"\n\n  const controls = {\n    osc1Wave: document.getElementById(\"osc1Dropdown\"),\n    osc1Interval: document.getElementById(\"osc1Interval\"),\n    osc1Vol: document.getElementById(\"osc1Vol\"),\n    osc2Wave: document.getElementById(\"osc2Dropdown\"),\n    osc2Interval: document.getElementById(\"osc2Interval\"),\n    osc2Vol: document.getElementById(\"osc2Vol\"),\n    osc3Wave: document.getElementById(\"osc3Dropdown\"),\n    osc3Interval: document.getElementById(\"osc3Interval\"),\n    osc3Vol: document.getElementById(\"osc3Vol\"),\n    octaveControl: document.getElementById(\"synthOctave\"),\n    filter1Type: document.getElementById(\"filter1Dropdown\"),\n    filter1Freq: document.getElementById(\"filter1Freq\"),\n    filter1Q: document.getElementById(\"filter1Q\"),\n    filter2Type: document.getElementById(\"filter2Dropdown\"),\n    filter2Freq: document.getElementById(\"filter2Freq\"),\n    filter2Q: document.getElementById(\"filter2Q\"),\n    filterSeries: document.getElementById(\"filter1Level\"),\n    filterMix: document.getElementById(\"filter2Level\"),\n    distortionToggle: document.getElementById(\"distortionToggle\"),\n    reverbToggle: document.getElementById(\"reverbToggle\"),\n    distortionLevel: document.getElementById(\"distortionAmmt\"),\n    reverbLevel: document.getElementById(\"reverbAmmt\"),\n    effectsMix: document.getElementById(\"effectsMix\"),\n    lfoVolume: document.getElementById(\"lfoAmp\"),\n    lfoFreq: document.getElementById(\"lfoFreq\"),\n    lfoFilter: document.getElementById(\"lfoFilter\"),\n    lfoRate: document.getElementById(\"lfoFrequency\"),\n    lfoAmmt: document.getElementById(\"lfoAmplitude\"),\n    envelopeAmp: document.getElementById(\"envelopeAmp\"),\n    envelopeFilter: document.getElementById(\"envelopeFilter\"),\n    envelopeAttack: document.getElementById(\"envelopeAttack\"),\n    envelopeRelease: document.getElementById(\"envelopeRelease\"),\n    envelopeAmmt: document.getElementById(\"envelopeAmmt\"),\n    masterVol: document.getElementById(\"masterVolume\"),\n  }\n\n  Object.values(controls).forEach( control => {\n    control.addEventListener(\"mouseleave\", () => {\n      rightText.innerHTML = \"Mouse over one of the controls to learn more.\";\n    })\n  })\n\n  controls.osc1Wave.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 1 Wave: Click to select the waveform being played by oscillator 1. Different waveforms will create different overtones and a noticably different sound.\";\n  });\n  controls.osc1Interval.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 1 Interval: Select the interval that oscillator 1 will be transposed up or down. Slide all the way to the right to transpose a full octave up, or all the way left to transpose one octave down.\";\n  });\n  controls.osc1Vol.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 1 Volume: Adjust the volume of oscillator 1 in the mix.\";\n  });\n  controls.osc2Wave.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 2 Wave: Click to select the waveform being played by oscillator 2. Different waveforms will create different overtones and a noticably different sound.\";\n  });\n  controls.osc2Interval.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 2 Interval: Select the interval that oscillator 2 will be transposed up or down. Slide all the way to the right to transpose a full octave up, or all the way left to transpose one octave down.\";\n  });\n  controls.osc2Vol.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 2 Volume: Adjust the volume of oscillator 2 in the mix\";\n  });\n  controls.osc3Wave.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 3 Wave: Click to select the waveform being played by oscillator 3. Different waveforms will create different overtones and a noticably different sound.\";\n  });\n  controls.osc3Interval.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 3 Interval: Select the interval that oscillator 3 will be transposed up or down. Slide all the way to the right to transpose a full octave up, or all the way left to transpose one octave down.\";\n  });\n  controls.osc3Vol.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Oscillator 3 Volume: Adjust the volume of oscillator 3 in the mix.\";\n  });\n  controls.octaveControl.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Octave Control: Adjust the octave of the whole instrument.\"\n  })\n  controls.filter1Type.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter 1 Type: Click to select a type of filter. Highpass filters exclude low frequencies, lowpass filters exclude high frequencies, and bandpass filters exclude frequencies outside of an allowed range, or 'band'.\";\n  });\n  controls.filter1Freq.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter 1 Frequency: Select the cutoff frequency for filter 1. This will determine the frequency at which the filter starts to exclude frequencies from the signal.\";\n  });\n  controls.filter1Q.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter 1 'Q value': This slider controls the ammount of resonance for highpass and lowpass filters. For bandpass filters, it determines the range of allowed frequencies (the width of the 'band').\";\n  }); \n  controls.filter2Type.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter 2 Type: Click to select a type of filter. Highpass filters exclude low frequencies, lowpass filters exclude high frequencies, and bandpass filters exclude frequencies outside of an allowed range, or 'band'.\";\n  });\n  controls.filter2Freq.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter 2 Frequency: Select the cutoff frequency for filter 2. This will determine the frequency at which the filter starts to exclude frequencies from the signal.\";\n  });\n  controls.filter2Q.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter 2 'Q value': This slider controls the ammount of resonance for highpass and lowpass filters. For bandpass filters, it determines the range of allowed frequencies (the width of the 'band').\";\n  });\n  controls.filterSeries.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Series/Parallel Control: Adjust whether the filters run in series, or in parallel. Slide to the left to run filters more in parallel (filter outputs are independent from each other), or slide to the right to run them in series (the output of filter 1 goes into the input of filter 2).\";\n  });\n  controls.filterMix.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter Wet/Dry Mix: Adjust how much the filters will affect the output sound. Slide to the left to get more unfiltered sound from the oscillators, or slide to the right to get more of the filtered signal.\";\n  });\n  controls.distortionToggle.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Distortion: Click to toggle distortion effect.\";\n  });\n  controls.reverbToggle.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Reverb: Click to toggle reverb effect.\";\n  });\n  controls.distortionLevel.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Distortion Ammount: Adjust the ammount of distortion to be applied to the signal when the distortion effect is on.\";\n  });\n  controls.reverbLevel.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Reverb Ammount: Adjust the ammount of reverb to be applied to the signal when the reverb effect is on.\";\n  });\n  controls.effectsMix.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Effects Wet/Dry Mix: Adjust how much the effects will affect the output sound. Slide to the left to get more of the 'dry' signal, with no effects.\";\n  });\n  controls.lfoVolume.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"LFO Volume Toggle: When this option is selected, the instrument's volume will be modulated by the LFO, a low-frequency sinusoidal wave. This can create a tremolo effect.\";\n  });\n  controls.lfoFreq.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"LFO Pitch Toggle: When this option is selected, the instrument's overall pitch will be modulated by the LFO, a low-frequency sinusoidal wave. This can create a vibrato effect\";\n  });\n  controls.lfoFilter.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"LFO Filter Toggle: When this option is selected, the frequency of the two filters will be modulated by the LFO, a low-frequency sinusoidal wave.\";\n  });\n  controls.lfoRate.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"LFO Frequency: Adjust the frequency of the LFO to change how fast the modulation occurs.\";\n  });\n  controls.lfoAmmt.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"LFO Ammount: Adjust the ammount of modulation to determine how much the LFO will affect the parameter it's mapped to.\";\n  });\n  controls.envelopeAmp.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Volume Envelope: Selecting this option will allow you to adjust the attack and release times of the volume envelope, i.e. how fast the volume fades in and fades out when pressing and releasing the keys.\";\n  });\n  controls.envelopeFilter.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter Envelope: Selecting this option will allow you to adjust the attack and release times of the filter envelope, i.e. how fast the volume filter frequency ramps up and down when pressing and releasing the keys.\";\n  });\n  controls.envelopeAttack.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Envelope Attack: Adjust the ammount of time after pressing a key before the envelope reaches its maximum value. Slide up to make the volume or filter frequency ramp up more slowly.\";\n  });\n  controls.envelopeRelease.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Envelope Release: Adjust the ammount of time after releasing a key before the envelope reaches its minimum value. Slide up to make the volume or filter frequency ramp down more slowly.\";\n  });\n  controls.envelopeAmmt.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Filter Ammount: Adjust the ammount that the filter frequency will be affected by the filter envelope.\";\n  });\n  controls.masterVol.addEventListener(\"mouseover\", () => {\n    rightText.innerHTML = \"Master Volume: Adjust the overall volume of the instrument.\";\n  });\n}\n\nexport default setupEventListeners;","class LfoControls {\n  constructor(synth) {\n    this.ampToggle = document.getElementById(\"lfoAmp\");\n    this.filterToggle = document.getElementById(\"lfoFilter\");\n    this.freqToggle = document.getElementById(\"lfoFreq\");\n    this.ammt = document.getElementById(\"lfoAmplitude\");\n    this.frequency = document.getElementById(\"lfoFrequency\");\n    this.synth = synth;\n\n    this.ampToggle.addEventListener(\"click\", function(e){\n      if (this.ampToggle.classList.contains(\"buttonSelected\")) {\n        this.ampToggle.classList.remove(\"buttonSelected\");\n        this.synth.setLfo({mode: \"none\"})\n      } else {\n        this.ampToggle.classList.add(\"buttonSelected\");\n        this.filterToggle.classList.remove(\"buttonSelected\");\n        this.freqToggle.classList.remove(\"buttonSelected\");\n        this.synth.setLfo({mode: \"amp\"});\n      }\n    }.bind(this))\n\n    this.filterToggle.addEventListener(\"click\", function(e){\n      if (this.filterToggle.classList.contains(\"buttonSelected\")) {\n        this.filterToggle.classList.remove(\"buttonSelected\");\n        this.synth.setLfo({mode: \"none\"})\n      } else {\n        this.filterToggle.classList.add(\"buttonSelected\");\n        this.ampToggle.classList.remove(\"buttonSelected\");\n        this.freqToggle.classList.remove(\"buttonSelected\");\n        this.synth.setLfo({mode: \"filter\"});\n      }\n    }.bind(this))\n\n    this.freqToggle.addEventListener(\"click\", function(e){\n      if (this.freqToggle.classList.contains(\"buttonSelected\")) {\n        this.freqToggle.classList.remove(\"buttonSelected\");\n        this.synth.setLfo({mode: \"none\"})\n      } else {\n        this.freqToggle.classList.add(\"buttonSelected\");\n        this.filterToggle.classList.remove(\"buttonSelected\");\n        this.ampToggle.classList.remove(\"buttonSelected\");\n        this.synth.setLfo({mode: \"freq\"});\n      }\n    }.bind(this))\n\n    this.ammt.addEventListener(\"input\", function(e){\n      this.synth.setLfo({params: { amplitude: parseFloat(e.target.value) }})\n    }.bind(this));\n\n    this.frequency.addEventListener(\"input\", function(e){\n      this.synth.setLfo({params: { frequency: parseFloat(e.target.value) }})\n    }.bind(this));\n  }\n}\n\nexport default LfoControls","import setupOscControls from './osc_controls';\nimport setupFilterControls from './filter_controls';\nimport EnvelopeControls from './envelope_controls';\nimport { setupEffectsControls } from './effect_controls';\nimport setupMouseoverText from './mouseover_text';\nimport LfoControls from './lfo_controls';\nclass Keyboard {\n  constructor(synth) {\n    this.synth = synth;\n    this.playNote = this.playNote.bind(this);\n    this.setupEventListeners();\n    this.envelopeControls = new EnvelopeControls(synth);\n    this.lfoControls = new LfoControls(synth);\n  }\n\n  setupEventListeners() {\n\n    const keyboard = document.querySelector(\".keyboard\");\n    keyboard.addEventListener(\"mouseover\", (e) => {\n      e.stopPropagation();\n      let key = e.target;\n      if (!key.classList.contains(\"keyPressed\")) {\n        key.classList.add(\"keyHover\");\n      }\n    });\n\n    keyboard.addEventListener(\"mouseout\", (e) => {\n      e.stopPropagation();\n      let key = e.target;\n      key.classList.remove(\"keyHover\");\n    });\n\n    keyboard.addEventListener(\"mouseup\", () => {\n      this.synth.stop();\n      let keys = Array.from(document.querySelectorAll(\".key\"));\n      keys.forEach( key => key.classList.remove(\"keyPressed\"));\n    })\n\n    const C = document.getElementById(\"C\")\n    C.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      C.classList.add(\"keyPressed\");\n      let func = this.playNote(\"C\");\n      func();\n    })\n    C.addEventListener(\"mouseup\", this.synth.stop)\n\n    const Cs = document.getElementById(\"Cs\")\n    Cs.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      Cs.classList.add(\"keyPressed\");\n      let func = this.playNote(\"Cs\");\n      func();\n    })\n    Cs.addEventListener(\"mouseup\", this.synth.stop)\n\n    const D = document.getElementById(\"D\")\n    D.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      D.classList.add(\"keyPressed\");\n      let func = this.playNote(\"D\");\n      func();\n    })\n    D.addEventListener(\"mouseup\", this.synth.stop)\n\n    const Ds = document.getElementById(\"Ds\")\n    Ds.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      Ds.classList.add(\"keyPressed\");\n      let func = this.playNote(\"Ds\");\n      func();\n    })\n    Ds.addEventListener(\"mouseup\", this.synth.stop)\n\n    const E = document.getElementById(\"E\")\n    E.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      E.classList.add(\"keyPressed\");\n      let func = this.playNote(\"E\");\n      func();\n    })\n    E.addEventListener(\"mouseup\", this.synth.stop)\n\n    const F = document.getElementById(\"F\")\n    F.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      F.classList.add(\"keyPressed\");\n      let func = this.playNote(\"F\");\n      func();\n    })\n    F.addEventListener(\"mouseup\", this.synth.stop)\n\n    const Fs = document.getElementById(\"Fs\")\n    Fs.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      Fs.classList.add(\"keyPressed\");\n      let func = this.playNote(\"Fs\");\n      func();\n    })\n    Fs.addEventListener(\"mouseup\", this.synth.stop)\n\n    const G = document.getElementById(\"G\")\n    G.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      G.classList.add(\"keyPressed\");\n      let func = this.playNote(\"G\");\n      func();\n    })\n    G.addEventListener(\"mouseup\", this.synth.stop)\n\n    const Gs = document.getElementById(\"Gs\")\n    Gs.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      Gs.classList.add(\"keyPressed\");\n      let func = this.playNote(\"Gs\");\n      func();\n    })\n    Gs.addEventListener(\"mouseup\", this.synth.stop);\n\n    const A = document.getElementById(\"A\")\n    A.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      A.classList.add(\"keyPressed\");\n      let func = this.playNote(\"A\");\n      func();\n    })\n    A.addEventListener(\"mouseup\", this.synth.stop)\n\n    const As = document.getElementById(\"As\")\n    As.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      As.classList.add(\"keyPressed\");\n      let func = this.playNote(\"As\");\n      func();\n    })\n    As.addEventListener(\"mouseup\", this.synth.stop)\n\n    const B = document.getElementById(\"B\")\n    B.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      B.classList.add(\"keyPressed\");\n      let func = this.playNote(\"B\");\n      func();\n    })\n    B.addEventListener(\"mouseup\", this.synth.stop);\n\n    const C2 = document.getElementById(\"C2\")\n    C2.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      C2.classList.add(\"keyPressed\");\n      let func = this.playNote(\"C2\");\n      func();\n    })\n    C2.addEventListener(\"mouseup\", this.synth.stop)\n\n    const Cs2 = document.getElementById(\"Cs2\")\n    Cs2.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      Cs2.classList.add(\"keyPressed\");\n      let func = this.playNote(\"Cs2\");\n      func();\n    })\n    Cs2.addEventListener(\"mouseup\", this.synth.stop)\n\n    const D2 = document.getElementById(\"D2\")\n    D2.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      D2.classList.add(\"keyPressed\");\n      let func = this.playNote(\"D2\");\n      func();\n    })\n    D2.addEventListener(\"mouseup\", this.synth.stop)\n\n    const Ds2 = document.getElementById(\"Ds2\")\n    Ds2.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      Ds2.classList.add(\"keyPressed\");\n      let func = this.playNote(\"Ds2\");\n      func();\n    })\n    Ds2.addEventListener(\"mouseup\", this.synth.stop)\n\n    const E2 = document.getElementById(\"E2\")\n    E2.addEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n      E2.classList.add(\"keyPressed\");\n      let func = this.playNote(\"E2\");\n      func();\n    })\n    E2.addEventListener(\"mouseup\", this.synth.stop)\n\n    document.addEventListener(\"keydown\", (e) => {\n      const key = e.key.toLowerCase();\n      if (key === \"a\") {\n        C.classList.add(\"keyPressed\");\n        let func = this.playNote(\"C\")\n        func();\n      } else if (key === \"w\") {\n        Cs.classList.add(\"keyPressed\");\n        let func = this.playNote(\"Cs\")\n        func();\n      } else if (key === \"s\") {\n        D.classList.add(\"keyPressed\");\n        let func = this.playNote(\"D\")\n        func();\n      } else if (key === \"e\") {\n        Ds.classList.add(\"keyPressed\");\n        let func = this.playNote(\"Ds\")\n        func();\n      } else if (key === \"d\") {\n        E.classList.add(\"keyPressed\");\n        let func = this.playNote(\"E\")\n        func();\n      } else if (key === \"f\") {\n        F.classList.add(\"keyPressed\");\n        let func = this.playNote(\"F\")\n        func();\n      } else if (key === \"t\") {\n        Fs.classList.add(\"keyPressed\");\n        let func = this.playNote(\"Fs\")\n        func();\n      } else if (key === \"g\") {\n        G.classList.add(\"keyPressed\");\n        let func = this.playNote(\"G\")\n        func();\n      } else if (key === \"y\") {\n        Gs.classList.add(\"keyPressed\");\n        let func = this.playNote(\"Gs\")\n        func();\n      } else if (key === \"h\") {\n        A.classList.add(\"keyPressed\");\n        let func = this.playNote(\"A\")\n        func();\n      } else if (key === \"u\") {\n        As.classList.add(\"keyPressed\");\n        let func = this.playNote(\"As\")\n        func();\n      } else if (key === \"j\") {\n        B.classList.add(\"keyPressed\");\n        let func = this.playNote(\"B\")\n        func();\n      } else if (key === \"k\") {\n        C2.classList.add(\"keyPressed\");\n        let func = this.playNote(\"C2\");\n        func();\n      } else if (key === \"o\") {\n        Cs2.classList.add(\"keyPressed\");\n        let func = this.playNote(\"Cs2\");\n        func();\n      } else if (key === \"l\") {\n        D2.classList.add(\"keyPressed\");\n        let func = this.playNote(\"D2\")\n        func();\n      } else if (key === \"p\") {\n        Ds2.classList.add(\"keyPressed\");\n        let func = this.playNote(\"Ds2\")\n        func();\n      } else if (key === \";\") {\n        E2.classList.add(\"keyPressed\");\n        let func = this.playNote(\"E2\")\n        func();\n      }\n    }); \n\n    document.addEventListener(\"keyup\", () => {\n      this.synth.stop()\n      let keys = Array.from(document.querySelectorAll(\".key\"));\n      keys.forEach( key => key.classList.remove(\"keyPressed\"));\n    });\n\n    const volume = document.getElementById(\"masterVolume\");\n    volume.addEventListener(\"input\", function(e) {\n      this.synth.setMasterVolume(e.target.value);\n    }.bind(this));\n\n    const octave = document.getElementById(\"synthOctave\");\n    octave.addEventListener(\"input\", function(e) {\n      this.synth.octave = (e.target.value)\n    }.bind(this));\n\n    setupOscControls(this.synth);\n    setupFilterControls(this.synth);\n    setupEffectsControls(this.synth);\n    setupMouseoverText();\n  }\n\n  playNote(note) {\n    if (note.search(\"2\") === -1) {\n      let currNote = note + this.synth.octave;\n      return(() => {\n        this.synth.playNote(currNote);\n      })\n    } else {\n\n      note = note.slice(0, note.length - 1);\n      let currNote = note + (parseInt(this.synth.octave) + 1);\n      return(() => {\n        this.synth.playNote(currNote);\n      })\n    }\n  }\n}\n\nexport default Keyboard;","import Synth from './synthesizer/synth';\nimport Keyboard from './GUI/keyboard';\nimport {visualize, visualize2} from './GUI/visualizer';\nconst isChrome = !!window.chrome\n\nif (isChrome) {\n\n\n  const Ctx = window.AudioContext || window.webkitAudioContext;\n  const currContext = new Ctx();\n  const synthesizer = new Synth(currContext);\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const keyboard = new Keyboard(synthesizer);\n    const draw1 = visualize(synthesizer);\n    const draw2 = visualize2(synthesizer);\n    draw1();\n    draw2();\n\n    const gitHub = document.getElementById(\"gitHub\");\n    const linkedIn = document.getElementById(\"linkedIn\");\n    gitHub.addEventListener(\"click\", () => {\n      console.log(\"click\")\n      document.getElementById(\"gitHubLink\").click();\n    })\n    linkedIn.addEventListener(\"click\", () => {\n      console.log(\"click\")\n      document.getElementById(\"linkedInLink\").click();\n    })\n  });\n} else {\n  let errorModal = document.createElement(\"SECTION\");\n  let errorTextBox = document.createElement(\"DIV\");\n  errorModal.classList.add(\"errorModal\");\n  errorTextBox.classList.add(\"errorTextBox\");\n  let errorText = document.createTextNode(\"Sorry! The Web Audio API is still fairly new to browsers, creating some compatibility issues. Please visit this site with Google Chrome.\")\n  errorTextBox.appendChild(errorText);\n  errorModal.appendChild(errorTextBox);\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelector(\"body\").appendChild(errorModal);\n  })\n}","// All visualization code inspired by \n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\nexport function visualize(synth) {\n\n  const canvas = document.getElementById(\"visualizer\");\n  const ctx = canvas.getContext(\"2d\");\n\n  synth.analyser.fftSize = 4096;\n\n  let length = synth.analyser.frequencyBinCount;\n  let data = new Uint8Array(length);\n\n  return function draw() {\n    requestAnimationFrame(draw);\n\n    length = synth.analyser.frequencyBinCount;\n    data = new Uint8Array(length);\n    synth.analyser.getByteTimeDomainData(data);\n\n    let trough = false;\n    let start = 0;\n    for (let i = 0; i < length; i++) {\n      if (data[i] < 128 && trough === false) {\n        trough = true;\n      } else if (trough === true && data[i] > 128 && start === 0) {\n        start = i;\n        data = data.slice(i);\n        break;\n      }\n    }\n\n    ctx.fillStyle = 'rgb(0,0,0)';\n    ctx.fillRect(0,0, canvas.width, canvas.height);\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = 'rgb(255, 7, 28)';\n    ctx.beginPath();\n\n    let sliceWidth = canvas.width / 1000;\n    let x = 0;\n\n    for (let i = 0; i < 1000; i++) {\n      let v = data[i] / 128;\n      let y = v * canvas.height / 2;\n\n      if(i == 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x = x + sliceWidth;\n    }\n    ctx.lineTo(canvas.width, canvas.height/2);\n    ctx.stroke();\n  }\n}\n\nexport function visualize2(synth) {\n  const canvas = document.getElementById(\"visualizer2\");\n  const ctx = canvas.getContext(\"2d\");\n\n  synth.analyser2.fftSize = 256;\n\n  let length = synth.analyser.frequencyBinCount;\n  let data = new Uint8Array(length);\n  let floaters = new Uint8Array(length);\n\n  let backgroundColor = 'rgb(0, 0, 0)';\n\n  return function draw() {\n\n    requestAnimationFrame(draw);\n\n    synth.analyser2.getByteFrequencyData(data)\n\n    canvas.setAttribute(\"width\", window.innerWidth);\n    canvas.setAttribute(\"height\", window.innerHeight);\n\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    let barWidth = (canvas.width / length) * 15;\n    let barHeight;\n    let floaterHeight;\n    let x = 0;\n    let totalAmp = 0;\n    for (let i = 3; i < length; i ++) {\n      barHeight = data[i] * (canvas.height / 150);\n      totalAmp += data[i];\n      if (floaters[i] < data[i]) {\n        floaters[i] = data[i];\n      } else if (floaters[i] > 0){\n        floaters[i] = floaters[i] - 3;\n      }\n      if (floaters[i] > 250) {\n        floaters[i] = 0;\n      }\n      floaterHeight = floaters[i] * (canvas.height / 150) + 10;\n\n\n      ctx.fillStyle = 'rgb(0,0,0)';\n      ctx.fillRect(x, canvas.height - (barHeight/2), barWidth,barHeight);\n      if (floaters[i] > 1) {\n        ctx.fillStyle = 'rgba(255, 255, 255)';\n        ctx.fillRect(x, canvas.height - (floaterHeight/2), barWidth, 10);\n      }\n\n      x += barWidth + 1;\n    }\n\n    //background color changes based on the total volume of the synth\n    let red, green, blue\n    totalAmp = (totalAmp / 20000) * 255;\n    red = Math.round(totalAmp / 1.5);\n    green = 0;\n    blue = 0;\n    if (totalAmp > 60) {\n      green = Math.round(totalAmp - 60);\n    }\n    if (totalAmp > 150) {\n      blue = Math.round(totalAmp - 150);\n    }\n    backgroundColor = 'rgb(' + red + ',' + green + ',' + blue + ')';\n  }\n}"],"sourceRoot":""}